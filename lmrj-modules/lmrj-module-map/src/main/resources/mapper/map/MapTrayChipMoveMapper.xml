<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lmrj.map.tray.mapper.MapTrayChipMoveMapper" >
	<resultMap id="TrayMap" type="com.lmrj.map.tray.entity.MapTrayChipMove">
		<result column="id" property="id"></result>
		<result column="chip_id" property="chipId"></result>
		<result column="eqp_id" property="eqpId"></result>
		<result column="lot_no" property="lotNo"></result>
		<result column="from_tray_id" property="fromTrayId"></result>
		<result column="from_x" property="fromX"></result>
		<result column="from_y" property="fromY"></result>
		<result column="to_tray_id" property="toTrayId"></result>
		<result column="to_x" property="toX"></result>
		<result column="to_y" property="toY"></result>
		<result column="start_time" property="startTime"></result>
		<!--		<result column="down_eqp_id" property="downEqpId"></result>-->
		<result column="eqp_type" property="eqpType"></result>
		<result column="search_flag" property="searchFlag"></result>
	</resultMap>
	<sql id="Base_Column_List" >
       t.id,
       t.chip_id,
       t.eqp_id,
       t.production_no,
       t.lot_no,
       t.from_tray_id,
       t.from_x,
       t.from_y,
       t.to_tray_id,
       t.to_x,
       t.to_y,
       t.to_z,
       t.judge_result,
       t.start_time,
       t.create_date
	</sql>
	<!--<select id="queryChipMove" resultType="map" parameterType="com.lmrj.map.tray.vo.MapTrayChipMoveQueryVo">
		SELECT `id`, `chip_id` AS chipId, `eqp_id` AS eqpId, `production_no` AS productionNo,
		`lot_no` AS lotNo, `to_tray_id` AS toTrayId, `to_x` AS toX, `to_y` AS toY, `to_z` AS toZ,
		`judge_result` AS judgeResult, `start_time` AS startTime,
		(
		select param_value from edc_dsk_log_production prod where prod.start_time=chip.start_time and prod.eqp_id=chip.eqp_id limit 1
		) as productionParam,
		(
		select GROUP_CONCAT(col_name SEPARATOR ',') from edc_config_file_csv title where title.eqp_model_name=chip.eqp_model_name
		) as productionTitle
		FROM `map_tray_chip_move` chip
		WHERE
		<trim suffixOverrides="," prefixOverrides="AND">
			<choose>
				<when test="chipIds != null and chipIds.size > 0">
					`chip_id` IN
					<foreach collection="chipIds" item="chip" open="(" separator="," close=")">
						#{chip}
					</foreach>
				</when>
				<otherwise>
					<if test="lotNo != null and lotNo != ''">
						AND lot_no = #{lotNo}
					</if>
					<if test="eqpIds != null and eqpIds.size > 0">
						AND eqp_id IN(
						<foreach collection="eqpIds" item="eqp" separator=",">
							#{eqp}
						</foreach>
						)

					</if>
					<choose>
						<when test="sTime == null">
							AND `start_time` &gt;= CURDATE()
						</when>
						<otherwise>
							AND `start_time` &gt;= #{sTime}
							AND `start_time` &lt;= #{eTime}
						</otherwise>
					</choose>
				</otherwise>
			</choose>
			ORDER BY `start_time` DESC
			LIMIT #{offset},#{pageSize}
		</trim>
	</select> -->
	<select id="queryChipMove" resultType="map" parameterType="com.lmrj.map.tray.vo.MapTrayChipMoveQueryVo">
		SELECT `id`, `chip_id` AS chipId, `eqp_id` AS eqpId, `production_no` AS productionNo,
		`lot_no` AS lotNo, `to_tray_id` AS toTrayId, `to_x` AS toX, `to_y` AS toY, `to_z` AS toZ,
		`judge_result` AS judgeResult, `start_time` AS startTime,`dm_id`as dmId,`dm_x` as dmX,`dm_y` as dmY,
		(
		select param_value from edc_dsk_log_production prod where prod.start_time=chip.start_time and prod.eqp_id=chip.eqp_id limit 1
		) as productionParam,
		(
		select GROUP_CONCAT(col_name SEPARATOR ',') from edc_config_file_csv title where title.eqp_model_name=chip.eqp_model_name
		) as productionTitle,
		DATE_FORMAT(start_time,'%Y-%m-%d %H:%i:%s') as startTimeStr
		FROM `map_tray_chip_move` chip
		<where>
			<if test="chipId != null and chipId !=''">
				and `chip_id` like concat('%', #{chipId})
			</if>
			<if test="eqpIds != null and eqpIds.size > 0">
				AND eqp_id IN(
				<foreach collection="eqpIds" item="eqp" separator=",">
					#{eqp}
				</foreach>
				)
			</if>
			<if test="sTime!=null and sTime!=''">
				AND `start_time` &gt;= #{sTime}
				AND `start_time` &lt;= #{eTime}
			</if>
		</where>
		ORDER BY `start_time` DESC
		LIMIT #{offset},#{pageSize}
	</select>

	<select id="countChipMove" resultType="int" parameterType="com.lmrj.map.tray.vo.MapTrayChipMoveQueryVo">
		SELECT COUNT(1)
		FROM `map_tray_chip_move`
		<where>
			<if test="chipId != null and chipId !=''">
				and `chip_id` like concat('%', #{chipId})
			</if>
			<if test="eqpIds != null and eqpIds.size > 0">
				AND eqp_id IN(
				<foreach collection="eqpIds" item="eqp" separator=",">
					#{eqp}
				</foreach>
				)
			</if>
			<if test="sTime!=null and sTime!=''">
				AND `start_time` &gt;= #{sTime}
				AND `start_time` &lt;= #{eTime}
			</if>
		</where>
		ORDER BY `start_time` DESC
		LIMIT #{offset},#{pageSize}
	</select>

	<select id="queryChip" resultType="map" parameterType="string">
	    SELECT mv.`id`, mv.`chip_id` AS chipId, mv.`eqp_id` AS eqpId, ec.`eqp_type` AS eqpType,
	    IFNULL(cf.`tray_row`,1) AS trayRow, IFNULL(cf.`tray_col`,1) AS trayCol,
	    mv.`from_tray_id` AS fromTrayId, mv.`from_x` AS fromX, mv.`from_y` AS fromY,
	    IFNULL(mv.`to_tray_id`,mv.`chip_id`) AS toTrayId, IFNULL(mv.`to_x`,1) AS toX, IFNULL(mv.`to_y`,1) AS toY, mv.`to_z` AS toZ,
	    mv.`judge_result` AS judgeResult, mv.`start_time` AS startTime,
	    ec.down_eqp_id as 'nextEqpId'
		FROM `map_tray_chip_move` mv
		LEFT JOIN `map_tray_config` cf ON mv.`to_tray_id` = cf.`tray_id`
		LEFT JOIN `map_equipment_config` ec ON mv.`eqp_id` = ec.`eqp_id` and ec.del_flag='0'
		WHERE `chip_id` = #{chipId}
		order by mv.`start_time`
	</select>

	<select id="getAllTraceData" parameterType="java.util.Map" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
				,m.lot_no,c.down_eqp_id, c.eqp_type
		from map_tray_chip_move m
		left join map_equipment_config c on m.eqp_id=c.eqp_id
		where (chip_id is null and start_time > #{startTime} )
		or (eqp_type=8 and start_time > #{srcTime})
		order by m.start_time desc
	</select>

	<delete id="emptyTraceTemp" >
		delete from trace_temp
	</delete>

	<insert id="insertTraceTemp" >
		insert into trace_temp(data_id,chip_id)values
		<foreach collection="data" item="item" separator=",">
			(#{item.id},#{item.chipId})
		</foreach>
	</insert>
	<update id="editTraceRs" >
		update map_tray_chip_move m, trace_temp t set m.chip_id = t.chip_id where m.id=t.data_id
	</update>

	<update id="updateChipIdById" parameterType="com.lmrj.map.tray.entity.MapTrayChipMove">
		update map_tray_chip_move set chip_id=#{chipId} where id=#{id}
	</update>

	<select id="getTraceDataByUpper" parameterType="java.lang.String" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
				,m.lot_no
		from map_tray_chip_move m
		left join map_equipment_config c on m.eqp_id=c.eqp_id
		where c.down_eqp_id=#{eqpId} and map_flag=0
		order by m.start_time desc
	</select>

	<select id="getTraceDataByDown" parameterType="java.lang.String" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
				,m.lot_no
		from map_tray_chip_move m
		where m.eqp_id=#{eqpId} and map_flag=0
		order by m.start_time desc
	</select>

	<select id="cntTraceData" resultType="java.lang.Integer">
		select count(1)
		from map_tray_chip_move m
		where  map_flag=0
	</select>

	<select id="getConfig" resultType="java.util.Map">
		select eqp_id as "eqpId",
				down_eqp_id as "downEqpId",
				eqp_type as "eqpType"
		from map_equipment_config c
		where c.eqp_id like 'APJ%'
		and del_flag='0'
		and sort_no!=0
		order by c.sort_no
	</select>

	<select id="getStartData" parameterType="java.lang.String" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
		,m.lot_no,c.eqp_type, 0 as search_flag
		from map_tray_chip_move m
		left join map_equipment_config c on c.eqp_id=m.eqp_id and c.del_flag='0'
		where m.map_flag=0
		and c.eqp_type=8 and c.eqp_id like 'APJ%'
		<if test="startTime!=null and startTime!=''">
			and m.create_date > #{startTime}
		</if>
		order by m.start_time
	</select>

	<select id="getStartErrorData" parameterType="java.lang.String" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
		,m.lot_no,c.eqp_type, 0 as search_flag
		from map_tray_chip_move m
		left join map_equipment_config c on c.eqp_id=m.eqp_id and c.del_flag='0'
		where (m.map_flag > 1 and m.map_flag &lt;99)
		and c.eqp_type=8 and c.eqp_id like 'APJ%'
		<if test="startTime!=null and startTime!=''">
			and m.create_date > #{startTime}
		</if>
		order by m.start_time
	</select>

	<select id="getUpperData" parameterType="com.lmrj.map.tray.entity.MapTrayChipMove" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
		,m.lot_no,c.eqp_type, 0 as search_flag
		from map_tray_chip_move m
		left join map_equipment_config c on c.eqp_id=m.eqp_id and c.del_flag='0'
		where c.down_eqp_id=#{eqpId} and m.lot_no=#{lotNo}
		and ( (m.to_tray_id=#{fromTrayId} and m.to_x=#{fromX} and m.to_y=#{fromY}) or((m.to_tray_id=#{toTrayId} and m.to_x=#{toX} and m.to_y=#{toY})))
		and m.start_time &lt;= #{startTime} and m.map_flag=0
		<if test="lmtTime!=null and lmtTime!=''">
			and m.start_time >= #{lmtTime}
		</if>
	</select>

	<select id="chkRecordCnt" resultType="java.util.Map">
		select DISTINCT record_cnt as "recordCnt",plan.lot_no as "lotNo",c.eqp_id as "eqpId" from map_eqp_pro_config c
		left join aps_plan_pdt_yield_detail plan on plan.production_name=c.production_name
		where plan.lot_no in (SELECT DISTINCT lot_no from map_tray_chip_move
													where chip_id is not null and map_flag!=1)
	</select>

	<update id="updateChipIdBatch">
		insert into temp_chip_id(id, chip_id)values
		<foreach collection="ids" item="item" separator=",">
			(#{item.id}, #{item.chipId})
		</foreach>
	</update>
	<delete id="emptyTemp">
		delete from temp_chip_id
	</delete>

	<update id="updateChipIds">
		update map_tray_chip_move mv, temp_chip_id tmp set mv.chip_id=tmp.chip_id, mv.map_flag=1 where mv.id=tmp.id
	</update>

	<select id="chkProcessRunning" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from map_tray_chip_log
		where end_time is null
		<if test="beginTime!=null and beginTime!=''">
			and begin_time > #{beginTime}
		</if>
	</select>

	<select id="getLastStartTime" parameterType="java.lang.String" resultType="java.lang.String">
		select date_format(begin_time, '%Y-%m-%d %H:%i:%s') from map_tray_chip_log
		where tray_code=#{trayCode}
		order by begin_time desc limit 1
	</select>

	<select id="getNGStart" parameterType="java.lang.String" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
		,m.lot_no,c.eqp_type, 0 as search_flag
		from map_tray_chip_move m
		left join map_equipment_config c on c.eqp_id=m.eqp_id and c.del_flag='0'
		where m.map_flag=0
		and c.eqp_id like 'APJ%'
		<if test="startTime!=null and startTime!=''">
			and m.create_date > #{startTime}
		</if>
		and judge_result='N'
		order by m.start_time
	</select>

	<select id="dmDetail" parameterType="java.lang.String" resultType="java.util.Map">
		select dm_id as dmId, eqp_id as eqpId,
			GROUP_CONCAT(dm_x ||'_'||dm_y) as dmX,GROUP_CONCAT(dm_y) as dmY,
			GROUP_CONCAT(date_format(START_time,'%y-%m-%d %H:%i:%s.%S')) as startTime
		from map_tray_chip_move
		where chip_id=#{chipId} and dm_id is not null
		GROUP BY dm_id,eqp_id
	</select>
</mapper>
