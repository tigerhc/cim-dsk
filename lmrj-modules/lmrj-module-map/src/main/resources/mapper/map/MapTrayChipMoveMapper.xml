<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lmrj.map.tray.mapper.MapTrayChipMoveMapper" >
	<resultMap id="TrayMap" type="com.lmrj.map.tray.entity.MapTrayChipMove">
		<result column="id" property="id"></result>
		<result column="chip_id" property="chipId"></result>
		<result column="eqp_id" property="eqpId"></result>
		<result column="lot_no" property="lotNo"></result>
		<result column="from_tray_id" property="fromTrayId"></result>
		<result column="from_x" property="fromX"></result>
		<result column="from_y" property="fromY"></result>
		<result column="to_tray_id" property="toTrayId"></result>
		<result column="to_x" property="toX"></result>
		<result column="to_y" property="toY"></result>
		<result column="start_time" property="startTime"></result>
		<result column="down_eqp_id" property="downEqpId"></result>
		<result column="eqp_type" property="eqpType"></result>
	</resultMap>
	<sql id="Base_Column_List" >
       t.id,
       t.chip_id,
       t.eqp_id,
       t.production_no,
       t.lot_no,
       t.from_tray_id,
       t.from_x,
       t.from_y,
       t.to_tray_id,
       t.to_x,
       t.to_y,
       t.to_z,
       t.judge_result,
       t.start_time,
       t.create_date
	</sql>

	<select id="queryChipMove" resultType="map" parameterType="com.lmrj.map.tray.vo.MapTrayChipMoveQueryVo">
	    SELECT `id`, `chip_id` AS chipId, `eqp_id` AS eqpId, `production_no` AS productionNo,
	    `lot_no` AS lotNo, `to_tray_id` AS toTrayId, `to_x` AS toX, `to_y` AS toY, `to_z` AS toZ,
	    `judge_result` AS judgeResult, `start_time` AS startTime
		FROM `map_tray_chip_move`
		WHERE
	    <trim suffixOverrides="," prefixOverrides="AND">
	    	<choose>
			    <when test="chipIds != null and chipIds.size > 0">
			    	`chip_id` IN
			    	<foreach collection="chipIds" item="chip" open="(" separator="," close=")">
					#{chip}
					</foreach>
			    </when>
			    <otherwise>
			    	<if test="lotNo != null and lotNo != ''">
					    AND lot_no = #{lotNo}
					</if>
					<if test="eqpIds != null and eqpIds.size > 0">
					    AND eqp_id IN(
					    <foreach collection="eqpIds" item="eqp" separator=",">
						#{eqp}
						</foreach>
					    )

					</if>
					<choose>
						<when test="sTime == null">
				    		AND `start_time` &gt;= CURDATE()
				    	</when>
					    <otherwise>
					    	AND `start_time` &gt;= #{sTime}
					    	AND `start_time` &lt;= #{eTime}
					    </otherwise>
					</choose>
			    </otherwise>
			</choose>
			<!-- ORDER BY `start_time` DESC -->
			LIMIT #{offset},#{pageSize}
	    </trim>
	</select>

	<select id="countChipMove" resultType="int" parameterType="com.lmrj.map.tray.vo.MapTrayChipMoveQueryVo">
	    SELECT COUNT(1)
	    FROM `map_tray_chip_move`
	    WHERE
	    <trim suffixOverrides="," prefixOverrides="AND">
	    	<choose>
			    <when test="chipIds != null and chipIds.size > 0">
			    	`chip_id` IN
			    	<foreach collection="chipIds" item="chip" open="(" separator="," close=")">
					#{chip}
					</foreach>
			    </when>
			    <otherwise>
			    	<if test="lotNo != null and lotNo != ''">
					    AND lot_no = #{lotNo}
					</if>
					<if test="eqpIds != null and eqpIds.size > 0">
					    AND eqp_id IN(
					    <foreach collection="eqpIds" item="eqp" separator=",">
						#{eqp}
						</foreach>
					    )
					</if>
					<choose>
						<when test="sTime == null">
				    		AND `start_time` &gt;= CURDATE()
				    	</when>
					    <otherwise>
					    	AND `start_time` &gt;= #{sTime}
					    	AND `start_time` &lt;= #{eTime}
					    </otherwise>
					</choose>
			    </otherwise>
			</choose>
	    </trim>
	</select>

	<select id="queryChip" resultType="map" parameterType="string">
	    SELECT mv.`id`, mv.`chip_id` AS chipId, mv.`eqp_id` AS eqpId, ec.`eqp_type` AS eqpType,
	    cf.`tray_row` AS trayRow, cf.`tray_col` AS trayCol,
	    mv.`from_tray_id` AS fromTrayId, mv.`from_x` AS fromX, mv.`from_y` AS fromY,
	    mv.`to_tray_id` AS toTrayId, mv.`to_x` AS toX, mv.`to_y` AS toY, mv.`to_z` AS toZ,
	    mv.`judge_result` AS judgeResult, mv.`start_time` AS startTime,
	    ec.down_eqp_id as 'nextEqpId'
		FROM `map_tray_chip_move` mv
		INNER JOIN `map_tray_config` cf ON mv.`to_tray_id` = cf.`tray_id`
		LEFT JOIN `map_equipment_config` ec ON mv.`eqp_id` = ec.`eqp_id`
		WHERE `chip_id` = #{chipId}
	</select>

	<select id="getAllTraceData" parameterType="java.util.Map" resultMap="TrayMap">
		select m.id,m.chip_id,m.eqp_id,m.from_tray_id,m.from_x,m.from_y,m.to_tray_id,m.to_x,m.to_y,m.start_time
				,m.lot_no,c.down_eqp_id, c.eqp_type
		from map_tray_chip_move m
		left join map_equipment_config c on m.eqp_id=c.eqp_id
		where (chip_id is null and start_time > #{startTime} )
		or (eqp_type=8 and start_time > #{srcTime})
		order by m.start_time desc
	</select>

	<delete id="emptyTraceTemp" >
		delete from trace_temp
	</delete>

	<insert id="insertTraceTemp" >
		insert into trace_temp(data_id,chip_id)values
		<foreach collection="data" item="item" separator=",">
			(#{item.id},#{item.chipId})
		</foreach>
	</insert>
	<update id="editTraceRs" >
		update map_tray_chip_move m, trace_temp t set m.chip_id = t.chip_id where m.id=t.data_id
	</update>

	<update id="updateChipIdById" parameterType="com.lmrj.map.tray.entity.MapTrayChipMove">
		update map_tray_chip_move set chip_id=#{chipId} where id=#{id}
	</update>
</mapper>
